<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Code Labs</title>
    <link>http://localhost:1313/</link>
    <description>Recent content on Code Labs</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 01 Jan 0001 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Akanksha Prasad</title>
      <link>http://localhost:1313/contributors/akanksha-prasad/9/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/contributors/akanksha-prasad/9/</guid>
      <description>Akanksha is a detail-oriented Cybersecurity Consultant and Co-Lead of the Web Application Security Team, with extensive experience delivering VAPT services across web and mobile applications, network infrastructures, API endpoints, thick client applications, cloud configuration audits, SBOM analysis, and threat modeling. She is recognized for guiding technical strategy, mentoring team members, and fostering cross-functional collaboration to ensure cybersecurity initiatives align with organizational objectives. Akanksha holds accredited industry certifications including Web Application Penetration tester Extreme (eWPTX) and actively shares her insights as a blog author at https://aura217.</description>
    </item>
    <item>
      <title>Check cookies</title>
      <link>http://localhost:1313/labs/software-data-integrity-failures/check-cookies/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/labs/software-data-integrity-failures/check-cookies/</guid>
      <description>Challenge Solution Insufficiently sanitized calls to dangerous functions can lead to interesting vulnerabilities. We require you excellent skills to figure out the vulnerability. main.py&#xA;from flask import Flask, request, jsonify, render_template, make_response, redirect, Response&#xD;import re, pickle, json&#xD;from base64 import b64encode, b64decode&#xD;app = Flask(__name__, static_url_path=&amp;#39;/&amp;#39;, static_folder=&amp;#39;static&amp;#39;, template_folder=&amp;#39;templates&amp;#39;)&#xD;@app.route(&amp;#39;/&amp;#39;)&#xD;def index():&#xD;return render_template(&amp;#39;index.html&amp;#39;)&#xD;def validation(userinput):&#xD;res = bool(re.match(&amp;#34;^[A-Za-z0-9]*$&amp;#34;), userinput)&#xD;if(res==False):&#xD;raise Exception(&amp;#34;Invalid input&amp;#34;)&#xD;@app.route(&amp;#39;/login&amp;#39;, methods=[&amp;#39;POST&amp;#39;])&#xD;def login():&#xD;try:&#xD;user_data = request.</description>
    </item>
    <item>
      <title>Chinmay Khobre</title>
      <link>http://localhost:1313/contributors/chinmay-khobre/11/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/contributors/chinmay-khobre/11/</guid>
      <description> Chinmay is an experienced cybersecurity professional with deep expertise in application security. He specializes in secure source code reviews across multiple platforms (Java, C#, .NET, Android, iOS), SAST, and software composition analysis. With contributions to DevSecOps initiatives and a working knowledge of web and API security testing, Chinmay supports organizations in building secure, resilient software at scale and holds the EWPTx2 certification.&#xA;Linkedin </description>
    </item>
    <item>
      <title>Fetch weather data</title>
      <link>http://localhost:1313/labs/ssrf/fetch-weather-data/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/labs/ssrf/fetch-weather-data/</guid>
      <description>Challenge Solution Occasionally, certain requests are not visible on the Burp proxy as they are internal. However, these internal requests can still be exploited, We require your excellent skills to figure out the vulnerability. HomeController.cs&#xA;using Microsoft.AspNetCore.Mvc;&#xD;using MvcApp.Models;&#xD;using System.Diagnostics;&#xD;using System.Data.SqlClient;&#xD;using System.Net;&#xD;namespace MvcApp.Controllers&#xD;{&#xD;public class DataController : Controller&#xD;{&#xD;public IActionResult Index()&#xD;{&#xD;return View();&#xD;}&#xD;[HttpPost]&#xD;public IActionResult FetchData ([FromBody] WeatherData wdata)&#xD;{&#xD;Debug.</description>
    </item>
    <item>
      <title>Hardeep Singh Sandhu</title>
      <link>http://localhost:1313/contributors/hardeep-singh/8/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/contributors/hardeep-singh/8/</guid>
      <description> Hardeep is a dedicated cybersecurity professional specializing in web and API application security. Experienced in conducting comprehensive vulnerability assessments and penetration testing, he actively collaborates with development teams to support effective remediation efforts. With a strong focus on source code review and threat modeling, Hardeep helps organizations build secure and resilient systems. He also holds the Web Application Penetration tester Extreme (eWPTX) certification.&#xA;Linkedin </description>
    </item>
    <item>
      <title>Hari Prasad</title>
      <link>http://localhost:1313/contributors/hari-prasad/7/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/contributors/hari-prasad/7/</guid>
      <description> Hari is a skilled cybersecurity professional with expertise in penetration testing and risk assessment across web, API, mobile, and network environments. Known for a hands-on approach and strong knowledge of industry standards and vulnerability management. Actively contributes to the security community through research and responsible disclosures, with recognition from leading global tech organizations. Hari holds Offensive Security Certified Professional (OSCP) and Certified Red Team Professional (CRTP) certifications.&#xA;Linkedin </description>
    </item>
    <item>
      <title>Identity Shuffle</title>
      <link>http://localhost:1313/labs/authentication-failures/identity-shuffle/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/labs/authentication-failures/identity-shuffle/</guid>
      <description>Challenge Solution This lab demonstrates how to create and manage a user session, which is a temporary and interactive exchange of information between a user and a system. It covers setting session attributes and issuing a session cookie to maintain the session. import javax.servlet.http.Cookie;&#xD;import javax.servlet.http.HttpServletRequest;&#xD;import javax.servlet.http.HttpServletResponse;&#xD;import javax.servlet.http.HttpSession;&#xD;public class CreateSession extends HttpServlet {&#xD;protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {&#xD;String username = request.</description>
    </item>
    <item>
      <title>Login logs</title>
      <link>http://localhost:1313/labs/improper-logging/login-logs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/labs/improper-logging/login-logs/</guid>
      <description>Challenge Solution The code is meant to handle user authentication, but unfortunately, it contains a vulnerability. A bonus vulnerability is also present, can you spot that as well? using System;&#xD;using System.Data;&#xD;using System.Data.SqlClient;&#xD;using Microsoft.AspNetCore.Mvc;&#xD;public class Clients&#xD;{&#xD;public string email { get; set; }&#xD;public string password { get; set; }&#xD;}&#xD;[HttpPost]&#xD;public IActionResult LoginUser([FromBody] Clients model)&#xD;{&#xD;var email = model.email;&#xD;var password = model.</description>
    </item>
    <item>
      <title>Make Payment</title>
      <link>http://localhost:1313/labs/injection/make-payment/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/labs/injection/make-payment/</guid>
      <description>Challenge Solution We urgently need a microservice that can handle payments. So our new intern created one using flask and werkzeug but it seems that our new intern made a mistake. We require your excellent skills to figure out the issue. makePayment.py&#xA;from flask import Flask, request&#xD;import hashlib&#xD;import sqlite3&#xD;app = Flask(__name__)&#xD;@app.route(&amp;#34;/pay&amp;#34;, methods=[&amp;#39;POST&amp;#39;])&#xD;def handlePay():&#xD;connection = sqlite3.connect(&amp;#39;database.db&amp;#39;)&#xD;cur = connection.cursor()&#xD;amount = request.form.get(&amp;#34;amount&amp;#34;)&#xD;if not amount:&#xD;return &amp;#34;Missing amount&amp;#34;, 400&#xD;userid = request.</description>
    </item>
    <item>
      <title>Missing checks</title>
      <link>http://localhost:1313/labs/security-misconfiguration/missing-checks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/labs/security-misconfiguration/missing-checks/</guid>
      <description>Challenge Solution Our new intern has worked hard on this project allowing authenticated users to download files, but we are afraid if everything is in order? We seek your expertise to ensure that the application is secure and adheres to best practices. const session = require(&amp;#34;express-session&amp;#34;);&#xD;const app = express();&#xD;app.use(session({&#xD;secret: process.env.SESSION_SECRET,&#xD;resave: false,&#xD;saveUninitialized: true&#xD;}));&#xD;app.use(express.urlencoded({ extended: false }));&#xD;function loginRequired(req, res, next) {&#xD;if (!req.session.userId) {&#xD;return res.</description>
    </item>
    <item>
      <title>Mitul Kumar</title>
      <link>http://localhost:1313/contributors/mitul-kumar/6/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/contributors/mitul-kumar/6/</guid>
      <description> Mitul is a dedicated cybersecurity professional with focused experience in web and network security. Skilled in red teaming methodologies and proficient in Python scripting to develop automation tools that enhance security testing and operational efficiency. Committed to leveraging advanced techniques to identify vulnerabilities, strengthen defenses, and support organizational risk management objectives. Mitul holds industry-recognized certifications including Burp Suite Certified Practitioner (BSCP) and Certified Red Team Professional (CRTP).&#xA;Linkedin </description>
    </item>
    <item>
      <title>Mukund Kedia</title>
      <link>http://localhost:1313/contributors/mukund-kedia/5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/contributors/mukund-kedia/5/</guid>
      <description>Mukund is a cybersecurity enthusiast with hands-on experience in penetration testing and a strong drive to expand expertise across various cybersecurity domains. Passionate about coding, he has developed vulnerable applications and designed Capture The Flag (CTF) challenges, while actively participating in numerous CTF events. Committed to mentoring and educating professionals to foster a stronger security community, Mukund holds the EWPTx2 certification and shares insights as a blog author at https://devplayer55221.</description>
    </item>
    <item>
      <title>Nikhil Memane</title>
      <link>http://localhost:1313/contributors/nikhil-memane/13/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/contributors/nikhil-memane/13/</guid>
      <description> Nikhil is a versatile cybersecurity professional specializing in web application penetration testing, dedicated to delivering thorough and effective security assessments. He actively participates in Capture The Flag (CTF) challenges, explores web development, and engages in bug bounty programs. Currently advancing his expertise in web security and smart contract auditing, Nikhil holds the Burp Suite Certified Practitioner (BSCP) certification to support his drive for innovative security solutions.&#xA;Linkedin </description>
    </item>
    <item>
      <title>Prajyot Chemburkar</title>
      <link>http://localhost:1313/contributors/prajyot-chemburkar/4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/contributors/prajyot-chemburkar/4/</guid>
      <description> Prajyot is a detail-oriented cybersecurity professional with a strong background in penetration testing, secure code review, and network infrastructure security. He has demonstrated expertise in identifying and mitigating vulnerabilities across web applications, APIs, and thick client environments. Prajyot holds accredited industry certifications including Burp Suite Certified Practitioner (BSCP) and Certified Android Penetration Tester (CAPT), and actively shares his insights as a blog author at https://iampachinko.site.&#xA;Linkedin </description>
    </item>
    <item>
      <title>Profile load</title>
      <link>http://localhost:1313/labs/broken-access-control/profile-load/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/labs/broken-access-control/profile-load/</guid>
      <description>Challenge Solution In this challenge, you are presented with a code that involves the logic for retrieving and displaying the user&amp;rsquo;s profile. Your task is to identify any vulnerabilities present in the code. import java.io.IOException;&#xD;import javax.servlet.ServletException;&#xD;import javax.servlet.http.HttpServlet;&#xD;import javax.servlet.http.HttpServletRequest;&#xD;import javax.servlet.http.HttpServletResponse;&#xD;import java.sql.Connection;&#xD;import java.sql.DriverManager;&#xD;import java.sql.PreparedStatement;&#xD;import java.sql.ResultSet;&#xD;import java.sql.SQLException;&#xD;public class CheckProfile extends HttpServlet {&#xD;protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {&#xD;String requestedUserId = request.</description>
    </item>
    <item>
      <title>Secure Password Reset</title>
      <link>http://localhost:1313/labs/cryptographic-failures/secure-password-reset/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/labs/cryptographic-failures/secure-password-reset/</guid>
      <description>Challenge Solution In this challenge, you are tasked with reviewing a code snippet that implements a password reset functionality using UUID (Universally Unique Identifier). Your goal is to identify any potential vulnerabilities in the code that could compromise the security of the password reset process. controller/user_controller.go&#xA;package controller&#xD;import (&#xD;&amp;#34;fmt&amp;#34;&#xD;&amp;#34;net/http&amp;#34;&#xD;&amp;#34;service&amp;#34;&#xD;&amp;#34;middleware&amp;#34;&#xD;&amp;#34;schema&amp;#34;&#xD;&amp;#34;github.com/gin-gonic/gin&amp;#34;&#xD;)&#xD;type UserController struct {&#xD;userService *service.UserService;&#xD;}&#xD;// GenerateAndSendPasswordResetToken&#xD;// @Description Generate the password reset token and email it to the user.</description>
    </item>
    <item>
      <title>Suraj Kumar</title>
      <link>http://localhost:1313/contributors/suraj-kumar/3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/contributors/suraj-kumar/3/</guid>
      <description> Suraj is a Product Security Engineer with over 10 years of experience in application security, threat modeling, and cloud security. He is also the Lead of the Web Application Security Team and has strong expertise in leading and managing offensive security (Offsec) teams. Suraj holds the Offensive Security Certified Professional (OSCP) certification and serves as an OffSec Community Ambassador.&#xA;Linkedin </description>
    </item>
    <item>
      <title>UALog</title>
      <link>http://localhost:1313/labs/vulnerable-components/ualog/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/labs/vulnerable-components/ualog/</guid>
      <description>Challenge Solution A widely-used, open-source logging framework for Java applications, developed by an OSS Foundation was found to be vulnerable to a critical exploit. We require your excellent skills to figure out the vulnerable framework. package com.firstapp.register;&#xD;import java.io.IOException;&#xD;import javax.servlet.ServletException;&#xD;import javax.servlet.annotation.WebServlet;&#xD;import javax.servlet.http.HttpServlet;&#xD;import javax.servlet.http.HttpServletRequest;&#xD;import javax.servlet.http.HttpServletResponse;&#xD;import org.apache.logging.log4j.LogManager;&#xD;import org.apache.logging.log4j.Logger;&#xD;@WebServlet(&amp;#34;/log&amp;#34;)&#xD;public class doLog extends HttpServlet {&#xD;private static final long serialVersionUID = 1L;&#xD;// using log4j library 2.</description>
    </item>
    <item>
      <title>Upload the Pic</title>
      <link>http://localhost:1313/labs/insecure-design/upload-the-pic/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/labs/insecure-design/upload-the-pic/</guid>
      <description>Challenge Solution In a developer&amp;rsquo;s tale, a web page allows image uploads. During experimentation, someone stumbled upon an unexpected discovery while uploading a file, sparking curiosity and prompting further exploration. We require you excellent skills to figure out the vulnerability. &amp;lt;!DOCTYPE html&amp;gt;&#xD;&amp;lt;html&amp;gt;&#xD;&amp;lt;head&amp;gt;&#xD;&amp;lt;link rel=&amp;#34;shortcut icon&amp;#34; href=&amp;#34;../Resources/hmbct.png&amp;#34; /&amp;gt;&#xD;&amp;lt;/head&amp;gt;&#xD;&amp;lt;body&amp;gt;&#xD;&amp;lt;div style=&amp;#34;background-color:#c9c9c9;padding:15px;&amp;#34;&amp;gt;&#xD;&amp;lt;button type=&amp;#34;button&amp;#34; name=&amp;#34;homeButton&amp;#34; onclick=&amp;#34;location.href=&amp;#39;index.html&amp;#39;;&amp;#34;&amp;gt;Home Page&amp;lt;/button&amp;gt;&#xD;&amp;lt;button type=&amp;#34;button&amp;#34; name=&amp;#34;mainButton&amp;#34; onclick=&amp;#34;location.href=&amp;#39;fileupl.html&amp;#39;;&amp;#34;&amp;gt;Main Page&amp;lt;/button&amp;gt;&#xD;&amp;lt;/div&amp;gt;&#xD;&amp;lt;div align=&amp;#34;center&amp;#34;&amp;gt;&#xD;&amp;lt;form action=&amp;#34;&amp;#34; method=&amp;#34;post&amp;#34; enctype=&amp;#34;multipart/form-data&amp;#34;&amp;gt;&#xD;&amp;lt;br&amp;gt;&#xD;&amp;lt;b&amp;gt;Select image : &amp;lt;/b&amp;gt; &amp;lt;input type=&amp;#34;file&amp;#34; name=&amp;#34;file&amp;#34; id=&amp;#34;file&amp;#34; style=&amp;#34;border: solid;&amp;#34;&amp;gt;&#xD;&amp;lt;input type=&amp;#34;submit&amp;#34; value=&amp;#34;Submit&amp;#34; name=&amp;#34;submit&amp;#34;&amp;gt;&#xD;&amp;lt;/form&amp;gt;&#xD;&amp;lt;/div&amp;gt;&#xD;&amp;lt;?</description>
    </item>
    <item>
      <title>Vaibhav Rajput</title>
      <link>http://localhost:1313/contributors/vaibhav-rajput/2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/contributors/vaibhav-rajput/2/</guid>
      <description> Vaibhav is a detail-oriented cybersecurity professional specializing in web security, reverse engineering, and exploit development. He actively participates in Capture The Flag (CTF) challenges and applies his expertise to tackle complex security problems. Dedicated to making impactful contributions to the cybersecurity community, Vaibhav holds industry-recognized certifications such as OffSec Web Expert.&#xA;Linkedin </description>
    </item>
    <item>
      <title>Yakshita Sharma</title>
      <link>http://localhost:1313/contributors/yakshita-sharma/1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/contributors/yakshita-sharma/1/</guid>
      <description> Yakshita is a versatile cybersecurity professional with expertise in web application, network, and API penetration testing, backed by hands-on experience in real-world security assessments. An active CTF participant and vulnerability researcher, she has been credited with identifying a CVE. Yakshita is focused on advancing her skills in web application security and red teaming techniques and holds the Certified Professional Penetration Tester (eCPPT) certification.&#xA;Linkedin </description>
    </item>
  </channel>
</rss>
